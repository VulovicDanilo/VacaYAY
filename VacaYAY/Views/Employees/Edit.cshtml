@model VacaYAY.ViewModels.EditEmployeeViewModel

@{
    ViewBag.Title = "Edit";
}
@section scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $("#myModal").on("submit", "#create_contract_form", function (e) {
            e.preventDefault();
            onSubmit('#create_contract_form', '/Employees/AddContract')
        });
        $("#myModal").on("submit", "#remove_contract_form", function (e) {
            e.preventDefault();
            onSubmit('#remove_contract_form', '/Contracts/Delete')
        });
        $("#myModal").on("submit", "#edit_vac_days", function (e) {
            e.preventDefault();
            onSubmit('#edit_vac_days', '/Employees/EditVacDays');
        });
        $("#myModal").on("submit", "#create_extra_days", function (e) {
            e.preventDefault();
            onSubmit('#create_extra_days', '/ExtraDays/CreateAsync')
        });
        $("#myModal").on("submit", "#remove_extra_days", function (e) {
            e.preventDefault();
            onSubmit('#remove_extra_days', '/ExtraDays/RemoveExtraDays')
        });
        var ajaxCallURL = '/Contracts/AsyncCreate';
        $(function () {
            $(".modalPopup").click(function () {
                var $buttonClicked = $(this);
                var id = $buttonClicked.attr("data-id");
                var url = $buttonClicked.attr("data-url");
                var options = {
                    "backdrop": false,
                    keyboard: true
                };
                $.ajax({
                    type: "GET",
                    url: url,
                    data: {
                        id: id,
                    },
                    contentType: "application/json; charset=utf-8",
                    datatype: "json",
                    success: function (data) {
                        $('#myModalContent').html(data);
                        $('#myModal').modal(options);
                        $('#myModal').modal('show');
                    },
                    error: function () {
                        $("#myModal").modal("hide");
                        $('#myModalContent').html("");
                        alert("Content load failed.");
                    }
                });
            });
            $("#closebtn").click(function () {
                $("#myModal").modal("hide");
                $('#myModalContent').html("");
            });
        });
    </script>
}

<div id='myModal' class='modal'>
    <div class="modal-dialog">
        <div class="modal-content" style="overflow: auto;padding:20px">
            <button type="button" class="btn btn-info pull-right" id="closebtn">x</button>
            <div id='myModalContent'>
            </div>
        </div>
    </div>
</div>

<h2>Edit Employee</h2>


@using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <div>
            @Html.ActionLink("Details", "Details", new { id = Model.EmployeeID }) |
            @Html.ActionLink("All employees", "Index")
        </div>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.EmployeeID)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Profession, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Profession, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Profession, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsManager, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @if (Model.IsHimself)
                    {
                        @Html.DisplayFor(model => model.IsManager)
                    }
                    else
                    {
                        @Html.EditorFor(model => model.IsManager)
                    }
                    @Html.ValidationMessageFor(model => model.IsManager, "", new { @class = "text-danger" })
                </div>
                <a href="javascript:void(0);" class="modalPopup pull-right btn btn-info" data-id="@Model.EmployeeID" data-url="/Employees/EditVacDays">Edit Vacation Days <i class="fa fa-warning"></i></a>
            </div>
        </div>

        <div class="form-group">
            <h3>Contracts</h3>
            <table class="table table-responsive" id="contracts-table">
                <tbody id="contracts-table-body">
                    <tr>
                        <th>
                            Serial Number
                        </th>
                        <th>
                            Start Date
                        </th>
                        <th>
                            End Date
                        </th>
                        <th>
                            Download
                        </th>
                        <th>
                            Preview
                        </th>
                        <th>
                            Delete
                        </th>
                    </tr>
                    @foreach (var item in Model.Contracts)
                    {
                        <tr>
                            @Html.HiddenFor(model => item.ContractID)
                            <td>
                                @Html.DisplayFor(model => item.SerialNumber)
                            </td>
                            <td>
                                @Html.DisplayFor(model => item.StartDate)
                            </td>
                            <td>
                                @Html.DisplayFor(model => item.EndDate)
                            </td>
                            <td>
                                @Html.ActionLink("Download file", "Download", new { filename = item.Link }, new { target = "_blank" })
                            </td>
                            <td>
                                @Html.ActionLink("Preview", "Preview", "Employees", new { filename = item.Link }, new { target = "_blank" })
                            </td>
                            <td>
                                <a href="javascript:void(0);" class="modalPopup" data-url="/Contracts/Delete" data-id="@item.ContractID">Delete</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
            <a href="javascript:void(0);"
               class="modalPopup" data-id="@Model.EmployeeID" data-url="/Contracts/Create">Add Contract</a>
        </div>

        <div class="form-group">
            <h3>Extra Days</h3>
            <table class="table table-responsive" id="extradays-table">
                <tbody id="extradays-table-body">
                    <tr>
                        <th>
                            Basis
                        </th>
                        <th>
                            Days
                        </th>
                        <th>
                            Delete
                        </th>
                    </tr>
                    @foreach (var item in Model.ExtraDays)
                    {
                        <tr>
                            @Html.HiddenFor(model => item.ExtraDaysID)
                            <td>
                                @Html.DisplayFor(model => item.Basis)
                            </td>
                            <td>
                                @Html.DisplayFor(model => item.Days)
                            </td>
                            <td>
                                <a href="javascript:void(0);" class="modalPopup" data-id="@item.ExtraDaysID" data-url="/ExtraDays/RemoveExtraDays">Delete</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
            <a href="javascript:void(0);"
               class="modalPopup" data-id="@Model.EmployeeID" data-url="/ExtraDays/CreateAsync">Add Extra Days</a>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}



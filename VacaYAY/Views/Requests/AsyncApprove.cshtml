@model VacaYAY.ViewModels.DetailsRequestViewModel

<h3>Are you sure you want to approve this request?</h3>
<div>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.SubmissionDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.SubmissionDate)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.StartDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.StartDate)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.EndDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.EndDate)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.NumOfDays)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.NumOfDays)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.TypeOfDays)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.TypeOfDays)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Employee)
        </dt>

        <dd>
            @Html.ActionLink(linkText: "" + Model.Employee.Name + " " + Model.Employee.LastName, actionName: "Details", controllerName: "Employees", routeValues: new { id = Model.Employee.EmployeeID }, htmlAttributes: null)
        </dd>

    </dl>
    <h5><strong>Comments</strong></h5>
    @if (Model.Comments.Count > 0)
    {
        <table class="table table-responsive">
            <tbody>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Comments[0].TimeStamp)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Comments[0].Text)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Comments[0].Commenter.Name)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Comments[0].Status)
                    </th>
                    <th></th>
                </tr>

                @foreach (var item in Model.Comments)
                {
                    <tr>
                        <td>
                            @String.Format("{0:HH:mm dd/MM/yyyy}", item.TimeStamp)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Text)
                        </td>
                        <td>
                            @if (User.IsInRole("Manager"))
                            {
                                <a href="~/Employees/Details/@item.Commenter.EmployeeID">
                                    @item.Commenter.Name @item.Commenter.LastName
                                    @if (item.Commenter.IsManager)
                                    {
                                        <i class="fa fa-user-secret"></i>
                                    }
                                </a>
                            }
                            else
                            {
                                <p>
                                    @item.Commenter.Name @item.Commenter.LastName
                                    @if (item.Commenter.IsManager)
                                    {
                                        <i class="fa fa-user-secret"></i>
                                    }
                                </p>
                            }
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Status)
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }

    @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "approve_request_form" }))
    {
        @Html.AntiForgeryToken()


        @Html.HiddenFor(model => model.RequestID)
        if (Model.TypeOfDays == VacaYAY.Common.Enums.TypeOfDays.Paid)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Basis, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.Basis, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Basis, "", new { @class = "text-danger" })
                </div>
            </div>
        }

        <p id="errorMessage" class="text-danger"></p>

        <div class="form-actions no-color">
            <input type="submit" value="Approve" class="btn btn-success pull-right" />
        </div>
    }
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

@model IEnumerable<VacaYAY.ViewModels.DetailsRequestViewModel>

@{
    ViewBag.Title = "Index";
}

@section scripts {
    <script>

        $(function () {
            $(".btnModal").click(function () {
                var $buttonClicked = $(this);
                var id = $buttonClicked.attr("data-id");
                var callback = $buttonClicked.attr("data-url");
                $(".myModelContent").html('');
                var options = {
                    "backdrop": false,
                    keyboard: true
                };
                $.ajax({
                    type: "GET",
                    url: callback,
                    contentType: "application/json; charset=utf-8",
                    datatype: "json",
                    data: {
                        "id": id
                    },
                    success: function (data) {
                        $('#myModalContent').html(data);
                        $('#myModal').modal(options);
                        $('#myModal').modal('show');
                    },
                    error: function () {
                        alert("Content load failed.");
                    }
                });
            });
            $("#closbtn").click(function () {
                $('#myModal').modal('hide');
            });
        });
        function filter($param) {
            var $div = $(event.target)
            if ($div.is('p')) {
                $div = $div.parent();
            }
            var $active = $(".selected");
            $active.removeClass("selected");
            $div.addClass('selected');
            var rows = $("#requests-table").children('tbody').children('tr');
            for (var i = 1; i < rows.length; i++) {
                if (rows[i].className == $param || $param == "all")
                    rows[i].hidden = false;
                else
                    rows[i].hidden = true;
            }
            return this;
        }
    </script>
}
<div id='myModal' class='modal'>
    <div class="modal-dialog">
        <div class="modal-content" style="overflow: auto;padding:20px">
            <button type="button" class="btn btn-info pull-right" id="closbtn">x</button>
            <div id='myModalContent'>
            </div>
        </div>
    </div>
</div>

<h2>Vacation Requests</h2>

<div class="above-table">
    <a href="javascript:void(0);" class="btnModal" data-url="/Requests/Create">Create Request</a>
    <div class="legend pull-right">
        <div class="legend-box all selected" onclick="filter('all')">
            <p>All requests</p>
        </div>

        <div class="legend-box approved" onclick="filter('approved')">
            <p>Approved</p>
        </div>

        <div class="legend-box rejected" onclick="filter('rejected')">
            <p>Rejected</p>
        </div>

        <div class="legend-box pending" onclick="filter('pending')">
            <p>Pending</p>
        </div>
    </div>

</div>



<table class="table table-bordered" id="requests-table">
    <tr class="top-row">
        <th class="col-md-2">
            @Html.DisplayNameFor(model => model.Employee.Name)
        </th>
        <th class="col-md-2">
            @Html.DisplayNameFor(model => model.Employee.LastName)
        </th>
        <th class="col-md-2">
            @Html.DisplayNameFor(model => model.StartDate)
        </th>
        <th class="col-md-2">
            @Html.DisplayNameFor(model => model.EndDate)
        </th>
        <th class="col-md-4">

        </th>
    </tr>
    @foreach (var item in Model)
    {
        var classStyle = (item.Status == VacaYAY.Common.Enums.Status.Approved) ? "approved" : item.Status == VacaYAY.Common.Enums.Status.Rejected ? "rejected" : "pending";
        <tr class="@classStyle">
            @Html.HiddenFor(model => item.Status)
            <td>
                @Html.DisplayFor(modelItem => item.Employee.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Employee.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StartDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EndDate)
            </td>

            <td class="text-center">
                <a href="javascript:void(0);" data-id="@item.RequestID" data-url="/Requests/AsyncDetails" class="btnModal">Details</a>
                @if (item.Status == VacaYAY.Common.Enums.Status.Pending)
                {
                    <span> | </span>
                    <a href="javascript:void(0);" data-id="@item.RequestID" data-url="/Requests/AsyncEdit" class="btnModal">Edit</a>
                    if (User.IsInRole("Manager"))
                    {
                        <span> | </span>
                        <a href="javascript:void(0);" data-id="@item.RequestID" data-url="/Requests/AsyncApprove" class="btnModal">Approve</a>
                        <span> | </span>
                        <a href="javascript:void(0);" data-id="@item.RequestID" data-url="/Requests/AsyncReject" class="btnModal">Reject</a>
                    }
                }
            </td>
        </tr>
    }
</table>
